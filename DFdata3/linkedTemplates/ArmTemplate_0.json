{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DFdata3"
		},
		"InputDataLink_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'InputDataLink'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/InputDataLink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('InputDataLink_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CsvOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "InputDataLink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "capstonedata3output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/InputDataLink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelCampaignDataSheet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "InputDataLink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Campaign Data Sheet.xlsx",
						"container": "capstonedata3input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Campaign Name",
						"type": "String"
					},
					{
						"name": "Account",
						"type": "String"
					},
					{
						"name": "LOB",
						"type": "String"
					},
					{
						"name": "BU",
						"type": "String"
					},
					{
						"name": "PARENT CAMPAIGN NAME",
						"type": "String"
					},
					{
						"name": "SUB CAMPAIGN NAME",
						"type": "String"
					},
					{
						"name": "COUNTRY CODE",
						"type": "String"
					},
					{
						"name": "COUNTRY NAME",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/InputDataLink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelDataSheet2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "InputDataLink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Data Sheet 2.xlsx",
						"container": "capstonedata3input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Campaign Name",
						"type": "String"
					},
					{
						"name": "Account",
						"type": "String"
					},
					{
						"name": "REGION",
						"type": "String"
					},
					{
						"name": "xCampaign Quarter",
						"type": "String"
					},
					{
						"name": "Search Keyword Type",
						"type": "String"
					},
					{
						"name": "Search Match Type",
						"type": "String"
					},
					{
						"name": "Emea Region",
						"type": "String"
					},
					{
						"name": "Emea Sub Region",
						"type": "String"
					},
					{
						"name": "xAccount Currency",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/InputDataLink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelParentData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "InputDataLink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Parent Data Stream.xlsx",
						"container": "capstonedata3input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "SOURCE",
						"type": "String"
					},
					{
						"name": "xMedia Group",
						"type": "String"
					},
					{
						"name": "MEDIA TYPE",
						"type": "String"
					},
					{
						"name": "xMedia Channel",
						"type": "String"
					},
					{
						"name": "Agency Channel Name",
						"type": "String"
					},
					{
						"name": "Campaign Name",
						"type": "String"
					},
					{
						"name": "Account",
						"type": "String"
					},
					{
						"name": "LOB",
						"type": "String"
					},
					{
						"name": "BU",
						"type": "String"
					},
					{
						"name": "PARENT CAMPAIGN NAME",
						"type": "String"
					},
					{
						"name": "SUB CAMPAIGN NAME",
						"type": "String"
					},
					{
						"name": "COUNTRY CODE",
						"type": "String"
					},
					{
						"name": "COUNTRY NAME",
						"type": "String"
					},
					{
						"name": "REGION",
						"type": "String"
					},
					{
						"name": "xCampaign Quarter",
						"type": "String"
					},
					{
						"name": "Search Keyword Type",
						"type": "String"
					},
					{
						"name": "Search Match Type",
						"type": "String"
					},
					{
						"name": "Emea Region",
						"type": "String"
					},
					{
						"name": "Emea Sub Region",
						"type": "String"
					},
					{
						"name": "xAccount Currency",
						"type": "String"
					},
					{
						"name": "Compliant",
						"type": "String"
					},
					{
						"name": "Agency Owner Market",
						"type": "String"
					},
					{
						"name": "Campaign Scale",
						"type": "String"
					},
					{
						"name": "Campaign Objective",
						"type": "String"
					},
					{
						"name": "Media Brief Name",
						"type": "String"
					},
					{
						"name": "Impression ",
						"type": "String"
					},
					{
						"name": "Click",
						"type": "String"
					},
					{
						"name": "View",
						"type": "String"
					},
					{
						"name": "Swipe rate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/InputDataLink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CampaignDataSheet')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ExcelCampaignDataSheet",
								"type": "DatasetReference"
							},
							"name": "SrcCampaign"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CsvOutput",
								"type": "DatasetReference"
							},
							"name": "DstCampaignDataSheet"
						}
					],
					"transformations": [
						{
							"name": "SplitColumnByDelimiter"
						},
						{
							"name": "FillColumnsBySplitData"
						},
						{
							"name": "RemoveColumn"
						}
					],
					"script": "source(output(\n\t\t{Campaign Name} as string,\n\t\tAccount as string,\n\t\tLOB as string,\n\t\tBU as string,\n\t\t{PARENT CAMPAIGN NAME} as string,\n\t\t{SUB CAMPAIGN NAME} as string,\n\t\t{COUNTRY CODE} as string,\n\t\t{COUNTRY NAME} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> SrcCampaign\nSrcCampaign derive(Account1 = split(Account, \"_\"),\n\tpartitionBy('hash', 1)) ~> SplitColumnByDelimiter\nSplitColumnByDelimiter derive(LOB = Account1[1],\n\t\tBU = Account1[2],\n\t\t{PARENT CAMPAIGN NAME} = Account1[3],\n\t\t{SUB CAMPAIGN NAME} = Account1[4],\n\t\t{COUNTRY CODE} = Account1[5],\n\t\t{COUNTRY NAME} = Account1[6],\n\tpartitionBy('hash', 1)) ~> FillColumnsBySplitData\nFillColumnsBySplitData select(mapColumn(\n\t\t{Campaign Name},\n\t\tAccount,\n\t\tLOB,\n\t\tBU,\n\t\t{PARENT CAMPAIGN NAME},\n\t\t{SUB CAMPAIGN NAME},\n\t\t{COUNTRY CODE},\n\t\t{COUNTRY NAME}\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumn\nRemoveColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Campaign Data Sheet.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> DstCampaignDataSheet"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ExcelCampaignDataSheet')]",
				"[concat(variables('factoryId'), '/datasets/CsvOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSheet2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ExcelDataSheet2",
								"type": "DatasetReference"
							},
							"name": "SrcDataSheet2"
						},
						{
							"dataset": {
								"referenceName": "ExcelParentData",
								"type": "DatasetReference"
							},
							"name": "ParentData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CsvOutput",
								"type": "DatasetReference"
							},
							"name": "OutputDataSheet2"
						}
					],
					"transformations": [
						{
							"name": "DataSheet2LeftParentData"
						},
						{
							"name": "InsertNullwhenNull"
						},
						{
							"name": "RemoveNullColumnsFromDataSheet2"
						}
					],
					"script": "source(output(\n\t\t{Campaign Name} as string,\n\t\tAccount as string,\n\t\tREGION as string,\n\t\t{xCampaign Quarter} as string,\n\t\t{Search Keyword Type} as string,\n\t\t{Search Match Type} as string,\n\t\t{Emea Region} as string,\n\t\t{Emea Sub Region} as string,\n\t\t{xAccount Currency} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> SrcDataSheet2\nsource(output(\n\t\tSOURCE as string,\n\t\t{xMedia Group} as string,\n\t\t{MEDIA TYPE} as string,\n\t\t{xMedia Channel} as string,\n\t\t{Agency Channel Name} as string,\n\t\t{Campaign Name} as string,\n\t\tAccount as string,\n\t\tLOB as string,\n\t\tBU as string,\n\t\t{PARENT CAMPAIGN NAME} as string,\n\t\t{SUB CAMPAIGN NAME} as string,\n\t\t{COUNTRY CODE} as string,\n\t\t{COUNTRY NAME} as string,\n\t\tREGION as string,\n\t\t{xCampaign Quarter} as string,\n\t\t{Search Keyword Type} as string,\n\t\t{Search Match Type} as string,\n\t\t{Emea Region} as string,\n\t\t{Emea Sub Region} as string,\n\t\t{xAccount Currency} as string,\n\t\tCompliant as string,\n\t\t{Agency Owner Market} as string,\n\t\t{Campaign Scale} as string,\n\t\t{Campaign Objective} as string,\n\t\t{Media Brief Name} as string,\n\t\t{Impression } as string,\n\t\tClick as string,\n\t\tView as string,\n\t\t{Swipe rate} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> ParentData\nSrcDataSheet2, ParentData join(SrcDataSheet2@{Campaign Name} == ParentData@{Campaign Name},\n\tjoinType:'left',\n\tpartitionBy('hash', 1),\n\tbroadcast: 'auto')~> DataSheet2LeftParentData\nRemoveNullColumnsFromDataSheet2 derive(REGION = iifNull(REGION, \"Null\"),\n\t\t{xCampaign Quarter} = iifNull({xCampaign Quarter}, \"Null\"),\n\t\t{Search Keyword Type} = iifNull({Search Keyword Type}, \"Null\"),\n\t\t{Search Match Type} = iifNull({Search Match Type}, \"Null\"),\n\t\t{Emea Region} = iifNull({Emea Region}, \"Null\"),\n\t\t{Emea Sub Region} = iifNull({Emea Sub Region}, \"Null\"),\n\t\t{xAccount Currency} = iifNull({xAccount Currency}, \"Null\"),\n\tpartitionBy('hash', 1)) ~> InsertNullwhenNull\nDataSheet2LeftParentData select(mapColumn(\n\t\t{Campaign Name} = SrcDataSheet2@{Campaign Name},\n\t\tAccount = SrcDataSheet2@Account,\n\t\tREGION = ParentData@REGION,\n\t\t{xCampaign Quarter} = ParentData@{xCampaign Quarter},\n\t\t{Search Keyword Type} = ParentData@{Search Keyword Type},\n\t\t{Search Match Type} = ParentData@{Search Match Type},\n\t\t{Emea Region} = ParentData@{Emea Region},\n\t\t{Emea Sub Region} = ParentData@{Emea Sub Region},\n\t\t{xAccount Currency} = ParentData@{xAccount Currency}\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> RemoveNullColumnsFromDataSheet2\nInsertNullwhenNull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DataSheet2.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OutputDataSheet2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ExcelDataSheet2')]",
				"[concat(variables('factoryId'), '/datasets/ExcelParentData')]",
				"[concat(variables('factoryId'), '/datasets/CsvOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParentData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ExcelParentData",
								"type": "DatasetReference"
							},
							"name": "SrcParentData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CsvOutput",
								"type": "DatasetReference"
							},
							"name": "DstParentDataCompliant"
						},
						{
							"dataset": {
								"referenceName": "CsvOutput",
								"type": "DatasetReference"
							},
							"name": "DstParentDataNonCompliant"
						},
						{
							"dataset": {
								"referenceName": "CsvOutput",
								"type": "DatasetReference"
							},
							"name": "DstParentDataStream"
						},
						{
							"dataset": {
								"referenceName": "CsvOutput",
								"type": "DatasetReference"
							},
							"name": "DstParentDataSumForClickExpressionView"
						}
					],
					"transformations": [
						{
							"name": "ConditionalSplit1"
						},
						{
							"name": "ConditionalSplit2"
						},
						{
							"name": "GetSumForClickViewImpression"
						},
						{
							"name": "StaticYearandQuarter"
						},
						{
							"name": "ConditionalSplit3"
						},
						{
							"name": "QuarterYear"
						},
						{
							"name": "YearQuarter"
						},
						{
							"name": "ConditionalSplit4"
						},
						{
							"name": "YearQuarters"
						},
						{
							"name": "QuartersYear"
						},
						{
							"name": "YearandQuarter"
						},
						{
							"name": "QuarterandYear"
						},
						{
							"name": "YearandQuarters"
						},
						{
							"name": "QuartersandYear"
						},
						{
							"name": "RemoveQuarterYear"
						},
						{
							"name": "RemoveYearQuarter"
						},
						{
							"name": "RemoveYearQuarters"
						},
						{
							"name": "RemoveQuartersYear"
						},
						{
							"name": "UnionQuartersYear"
						},
						{
							"name": "UnionYearQuarter"
						},
						{
							"name": "UnionQuarterYear"
						},
						{
							"name": "UnionStaticYearandQuarter"
						},
						{
							"name": "NulltoUnclassified"
						},
						{
							"name": "ConditionalSplit5"
						},
						{
							"name": "MoveCompetitionToSearchKeywordType"
						},
						{
							"name": "AddYearandQuarter"
						},
						{
							"name": "UnionAddQuarterandYear"
						},
						{
							"name": "UnionMoveCompetitionSearchKeywordType"
						},
						{
							"name": "TypoCorrection"
						}
					],
					"script": "source(output(\n\t\tSOURCE as string,\n\t\t{xMedia Group} as string,\n\t\t{MEDIA TYPE} as string,\n\t\t{xMedia Channel} as string,\n\t\t{Agency Channel Name} as string,\n\t\t{Campaign Name} as string,\n\t\tAccount as string,\n\t\tLOB as string,\n\t\tBU as string,\n\t\t{PARENT CAMPAIGN NAME} as string,\n\t\t{SUB CAMPAIGN NAME} as string,\n\t\t{COUNTRY CODE} as string,\n\t\t{COUNTRY NAME} as string,\n\t\tREGION as string,\n\t\t{xCampaign Quarter} as string,\n\t\t{Search Keyword Type} as string,\n\t\t{Search Match Type} as string,\n\t\t{Emea Region} as string,\n\t\t{Emea Sub Region} as string,\n\t\t{xAccount Currency} as string,\n\t\tCompliant as string,\n\t\t{Agency Owner Market} as string,\n\t\t{Campaign Scale} as string,\n\t\t{Campaign Objective} as string,\n\t\t{Media Brief Name} as string,\n\t\t{Impression } as integer,\n\t\tClick as integer,\n\t\tView as float,\n\t\t{Swipe rate} as float\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> SrcParentData\nSrcParentData split(Compliant == \"Compliant\",\n\tCompliant == \"Non-Compliant\" || Compliant == \"Non Compliant\",\n\tdisjoint: false,\n\tpartitionBy('hash', 1)) ~> ConditionalSplit1@(Compliant, NonCompliant, Others)\nSrcParentData split(length( {xCampaign Quarter}) == 2,\n\tlength( {xCampaign Quarter}) == 7,\n\tlength( {xCampaign Quarter}) == 10,\n\tdisjoint: false,\n\tpartitionBy('hash', 1)) ~> ConditionalSplit2@(Quarter, YearQuarter, YearQuarters, NotQuarter)\nSrcParentData aggregate({TotalImpression } = sum({Impression }),\n\t\tTotalClick = sum(Click),\n\t\tTotalView = sum(View),\n\tpartitionBy('hash', 1)) ~> GetSumForClickViewImpression\nConditionalSplit2@Quarter derive(Year = \"2020\",\n\t\tQuarter = {xCampaign Quarter},\n\tpartitionBy('hash', 1)) ~> StaticYearandQuarter\nConditionalSplit2@YearQuarter split(startsWith({xCampaign Quarter}, \"2\"),\n\tdisjoint: false,\n\tpartitionBy('hash', 1)) ~> ConditionalSplit3@(QQyyyy, yyyyQQ)\nConditionalSplit3@QQyyyy derive(QuarterYear = split( {xCampaign Quarter}, \"-\"),\n\tpartitionBy('hash', 1)) ~> QuarterYear\nConditionalSplit3@yyyyQQ derive(YearQuarter = split( {xCampaign Quarter}, \"-\"),\n\tpartitionBy('hash', 1)) ~> YearQuarter\nConditionalSplit2@YearQuarters split(startsWith({xCampaign Quarter}, \"2\"),\n\tdisjoint: false) ~> ConditionalSplit4@(yyyyQQqq, QQqqyyyy)\nConditionalSplit4@yyyyQQqq derive(YearQuarters = split( {xCampaign Quarter}, \"-\"),\n\tpartitionBy('hash', 1)) ~> YearQuarters\nConditionalSplit4@QQqqyyyy derive(QuartersYear = split( {xCampaign Quarter}, \"-\"),\n\tpartitionBy('hash', 1)) ~> QuartersYear\nQuarterYear derive(Year = QuarterYear[1],\n\t\tQuarter = QuarterYear[2],\n\tpartitionBy('hash', 1)) ~> YearandQuarter\nYearQuarter derive(Year = iif(startsWith(YearQuarter[2], \"F\"),concat(\"20\", substring(YearQuarter[2], 3, 2)),YearQuarter[2]),\n\t\tQuarter = YearQuarter[1],\n\tpartitionBy('hash', 1)) ~> QuarterandYear\nYearQuarters derive(Year = YearQuarters[1],\n\t\tQuarter = concat(YearQuarters[2],\"-\", YearQuarters[3]),\n\tpartitionBy('hash', 1)) ~> YearandQuarters\nQuartersYear derive(Quarter = concat(QuartersYear[1],\"-\", QuartersYear[2]),\n\t\tYear = iif(startsWith(QuartersYear[3], \"F\"),concat(\"20\", substring(QuartersYear[3], 3, 2)),QuartersYear[3]),\n\tpartitionBy('hash', 1)) ~> QuartersandYear\nYearandQuarter select(mapColumn(\n\t\tSOURCE,\n\t\t{xMedia Group},\n\t\t{MEDIA TYPE},\n\t\t{xMedia Channel},\n\t\t{Agency Channel Name},\n\t\t{Campaign Name},\n\t\tAccount,\n\t\tLOB,\n\t\tBU,\n\t\t{PARENT CAMPAIGN NAME},\n\t\t{SUB CAMPAIGN NAME},\n\t\t{COUNTRY CODE},\n\t\t{COUNTRY NAME},\n\t\tREGION,\n\t\t{xCampaign Quarter},\n\t\t{Search Keyword Type},\n\t\t{Search Match Type},\n\t\t{Emea Region},\n\t\t{Emea Sub Region},\n\t\t{xAccount Currency},\n\t\tCompliant,\n\t\t{Agency Owner Market},\n\t\t{Campaign Scale},\n\t\t{Campaign Objective},\n\t\t{Media Brief Name},\n\t\t{Impression },\n\t\tClick,\n\t\tView,\n\t\t{Swipe rate},\n\t\tYear,\n\t\tQuarter\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveQuarterYear\nQuarterandYear select(mapColumn(\n\t\tSOURCE,\n\t\t{xMedia Group},\n\t\t{MEDIA TYPE},\n\t\t{xMedia Channel},\n\t\t{Agency Channel Name},\n\t\t{Campaign Name},\n\t\tAccount,\n\t\tLOB,\n\t\tBU,\n\t\t{PARENT CAMPAIGN NAME},\n\t\t{SUB CAMPAIGN NAME},\n\t\t{COUNTRY CODE},\n\t\t{COUNTRY NAME},\n\t\tREGION,\n\t\t{xCampaign Quarter},\n\t\t{Search Keyword Type},\n\t\t{Search Match Type},\n\t\t{Emea Region},\n\t\t{Emea Sub Region},\n\t\t{xAccount Currency},\n\t\tCompliant,\n\t\t{Agency Owner Market},\n\t\t{Campaign Scale},\n\t\t{Campaign Objective},\n\t\t{Media Brief Name},\n\t\t{Impression },\n\t\tClick,\n\t\tView,\n\t\t{Swipe rate},\n\t\tYear,\n\t\tQuarter\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveYearQuarter\nYearandQuarters select(mapColumn(\n\t\tSOURCE,\n\t\t{xMedia Group},\n\t\t{MEDIA TYPE},\n\t\t{xMedia Channel},\n\t\t{Agency Channel Name},\n\t\t{Campaign Name},\n\t\tAccount,\n\t\tLOB,\n\t\tBU,\n\t\t{PARENT CAMPAIGN NAME},\n\t\t{SUB CAMPAIGN NAME},\n\t\t{COUNTRY CODE},\n\t\t{COUNTRY NAME},\n\t\tREGION,\n\t\t{xCampaign Quarter},\n\t\t{Search Keyword Type},\n\t\t{Search Match Type},\n\t\t{Emea Region},\n\t\t{Emea Sub Region},\n\t\t{xAccount Currency},\n\t\tCompliant,\n\t\t{Agency Owner Market},\n\t\t{Campaign Scale},\n\t\t{Campaign Objective},\n\t\t{Media Brief Name},\n\t\t{Impression },\n\t\tClick,\n\t\tView,\n\t\t{Swipe rate},\n\t\tYear,\n\t\tQuarter\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveYearQuarters\nQuartersandYear select(mapColumn(\n\t\tSOURCE,\n\t\t{xMedia Group},\n\t\t{MEDIA TYPE},\n\t\t{xMedia Channel},\n\t\t{Agency Channel Name},\n\t\t{Campaign Name},\n\t\tAccount,\n\t\tLOB,\n\t\tBU,\n\t\t{PARENT CAMPAIGN NAME},\n\t\t{SUB CAMPAIGN NAME},\n\t\t{COUNTRY CODE},\n\t\t{COUNTRY NAME},\n\t\tREGION,\n\t\t{xCampaign Quarter},\n\t\t{Search Keyword Type},\n\t\t{Search Match Type},\n\t\t{Emea Region},\n\t\t{Emea Sub Region},\n\t\t{xAccount Currency},\n\t\tCompliant,\n\t\t{Agency Owner Market},\n\t\t{Campaign Scale},\n\t\t{Campaign Objective},\n\t\t{Media Brief Name},\n\t\t{Impression },\n\t\tClick,\n\t\tView,\n\t\t{Swipe rate},\n\t\tQuarter,\n\t\tYear\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveQuartersYear\nRemoveQuartersYear, RemoveYearQuarters union(byName: true,\n\tpartitionBy('hash', 1))~> UnionQuartersYear\nUnionQuartersYear, RemoveYearQuarter union(byName: true,\n\tpartitionBy('hash', 1))~> UnionYearQuarter\nUnionYearQuarter, RemoveQuarterYear union(byName: true,\n\tpartitionBy('hash', 1))~> UnionQuarterYear\nUnionQuarterYear, StaticYearandQuarter union(byName: true,\n\tpartitionBy('hash', 1))~> UnionStaticYearandQuarter\nTypoCorrection derive({xCampaign Quarter} = iifNull({xCampaign Quarter}, \"Unclassified\"),\n\t\t{Search Keyword Type} = iifNull({Search Keyword Type}, \"Unclassified\"),\n\t\t{Search Match Type} = iifNull({Search Match Type}, \"Unclassified\"),\n\t\t{Emea Region} = iifNull({Emea Region}, \"Unclassified\"),\n\t\t{Emea Sub Region} = iifNull({Emea Sub Region}, \"Unclassified\"),\n\t\t{Campaign Objective} = iifNull({Campaign Objective}, \"Unclassified\"),\n\t\t{Campaign Scale} = iifNull({Campaign Scale}, \"Unclassified\"),\n\t\tYear = iifNull(Year, \"Unclassified\"),\n\t\tQuarter = iifNull(Quarter, \"Unclassified\"),\n\tpartitionBy('hash', 1)) ~> NulltoUnclassified\nConditionalSplit2@NotQuarter split({xCampaign Quarter} == \"Competition\",\n\tdisjoint: false,\n\tpartitionBy('hash', 1)) ~> ConditionalSplit5@(CompetitionQuarter, BlankQuarter)\nConditionalSplit5@CompetitionQuarter derive({xCampaign Quarter} = \"Unclassified\",\n\t\t{Search Keyword Type} = {xCampaign Quarter},\n\t\tQuarter = \"Unclassified\",\n\t\tYear = \"Unclassified\",\n\tpartitionBy('hash', 1)) ~> MoveCompetitionToSearchKeywordType\nConditionalSplit5@BlankQuarter derive(Year = \"Unclassified\",\n\t\tQuarter = \"Unclassified\",\n\tpartitionBy('hash', 1)) ~> AddYearandQuarter\nUnionStaticYearandQuarter, AddYearandQuarter union(byName: true,\n\tpartitionBy('hash', 1))~> UnionAddQuarterandYear\nUnionAddQuarterandYear, MoveCompetitionToSearchKeywordType union(byName: true,\n\tpartitionBy('hash', 1))~> UnionMoveCompetitionSearchKeywordType\nUnionMoveCompetitionSearchKeywordType derive({Search Keyword Type} = iif({Search Keyword Type}==\"NonBrand\", \"Non Brand\", {Search Keyword Type}),\n\t\tCompliant = iif(Compliant == \"Non Compliant\", \"Non-Compliant\", Compliant),\n\t\t{Campaign Scale} = iif({Campaign Scale}==\"Rangional\", \"Regional\", {Campaign Scale}),\n\t\t{Campaign Objective} = iif({Campaign Objective}==\"Conversions\", \"Conversions\", {Campaign Objective}),\n\tpartitionBy('hash', 1)) ~> TypoCorrection\nConditionalSplit1@Compliant sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Compliant.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> DstParentDataCompliant\nConditionalSplit1@NonCompliant sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ParentDataNonCompliant.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> DstParentDataNonCompliant\nNulltoUnclassified sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ParentDataStream.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> DstParentDataStream\nGetSumForClickViewImpression sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ParentDataSumForClickExpressionView.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> DstParentDataSumForClickExpressionView"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ExcelParentData')]",
				"[concat(variables('factoryId'), '/datasets/CsvOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data3Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ParentData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ParentData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SrcParentData": {},
									"DstParentDataCompliant": {},
									"DstParentDataNonCompliant": {},
									"DstParentDataStream": {},
									"DstParentDataSumForClickExpressionView": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DataSheet2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataSheet2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SrcDataSheet2": {},
									"ParentData": {},
									"OutputDataSheet2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "CampaignDataSheet",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CampaignDataSheet",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SrcCampaign": {},
									"DstCampaignDataSheet": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ParentData')]",
				"[concat(variables('factoryId'), '/dataflows/DataSheet2')]",
				"[concat(variables('factoryId'), '/dataflows/CampaignDataSheet')]"
			]
		}
	]
}